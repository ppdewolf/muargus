/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package muargus.view;

import java.awt.Frame;
import muargus.model.SelectCombinationsModel;

/**
 *
 * @author ambargus
 */
public class GenerateAutomaticTables extends javax.swing.JDialog {

    SelectCombinationsModel model;
    private boolean valid; // is used to continue with the calculation
    private Frame parent;

    /**
     * Creates new form GenerateAutomaticTables
     */
    public GenerateAutomaticTables(java.awt.Frame parent, boolean modal, SelectCombinationsModel model) {
        super(parent, modal);
        this.model = model;
        this.valid = false;
        this.parent = parent;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Method for generating tables");
        //dimensionTextField.setText(model.getThreshold());
    }

    public int getDimensionTextField() {
        return Integer.parseInt(dimensionTextField.getText());
    }

    public boolean isMakeUpToDimensionRadioButton() {
        return makeUpToDimensionRadioButton.isSelected();
    }

    public boolean isUseIdentificatinLevelRadioButton() {
        return useIdentificatinLevelRadioButton.isSelected();
    }

    public boolean isValid() {
        return valid;
    }

    public void setValid(boolean valid) {
        this.valid = valid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        methodButtonGroup = new javax.swing.ButtonGroup();
        methodPanel = new javax.swing.JPanel();
        useIdentificatinLevelRadioButton = new javax.swing.JRadioButton();
        makeUpToDimensionRadioButton = new javax.swing.JRadioButton();
        dimensionTextField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generate");

        methodPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Method"));

        methodButtonGroup.add(useIdentificatinLevelRadioButton);
        useIdentificatinLevelRadioButton.setSelected(true);
        useIdentificatinLevelRadioButton.setText("Use identification level");
        useIdentificatinLevelRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useIdentificatinLevelRadioButtonStateChanged(evt);
            }
        });

        methodButtonGroup.add(makeUpToDimensionRadioButton);
        makeUpToDimensionRadioButton.setText("Make all tables up to dimension");

        dimensionTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dimensionTextFieldFocusGained(evt);
            }
        });

        javax.swing.GroupLayout methodPanelLayout = new javax.swing.GroupLayout(methodPanel);
        methodPanel.setLayout(methodPanelLayout);
        methodPanelLayout.setHorizontalGroup(
            methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(methodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(methodPanelLayout.createSequentialGroup()
                        .addComponent(useIdentificatinLevelRadioButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(methodPanelLayout.createSequentialGroup()
                        .addComponent(makeUpToDimensionRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dimensionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        methodPanelLayout.setVerticalGroup(
            methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(methodPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(useIdentificatinLevelRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(methodPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeUpToDimensionRadioButton)
                    .addComponent(dimensionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(methodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(methodPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setValid(false);
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        boolean isValid = true;
        int dimensions = 0;

        if (makeUpToDimensionRadioButton.isSelected()) {
            try {
                dimensions = Integer.parseInt(dimensionTextField.getText());
                if (dimensions <= 0) {
                    //show message: Illegal value for the dimension
                    System.out.println("Illegal value for the dimension, dimension cannot be smaller than 1");
                    isValid = false;
                } else if (dimensions > model.getVariables().length) {
                    System.out.println("Not enough identifying variables for this request");
                    //show message: Not enough identifying variables for this request
                    isValid = false;
                }
            } catch (Exception e) {
                System.out.println("Illegal value for the dimension, give a whole number");
                //show message: Illegal value for the dimension
                isValid = false;
            }
        }
        //System.out.println(isValid);
        if (isValid) {
            this.setValid(true);
            if (useIdentificatinLevelRadioButton.isSelected()) {
                ArgusInput getThreshold = new ArgusInput(parent, true);
                getThreshold.setLabelText("Threshold");
                getThreshold.setTitle("Threshold");
                getThreshold.setVisible(true);
                try {
                    model.setThreshold(getThreshold.getTextField());
                } catch (Exception e) {
                    isValid = false;
                }
            } else {
                int[] thresholds = new int[dimensions];
                for (int i = 0; i < dimensions; i++) {
                    ArgusInput getThreshold = new ArgusInput(parent, true);
                    getThreshold.setLabelText("Threshold for dim" + (i + 1));
                    getThreshold.setTitle("Threshold");
                    getThreshold.setVisible(true);
                    try {
                        thresholds[i] = getThreshold.getTextField();
                    } catch (Exception e) {
                        isValid = false;
                    }

                }
                model.setThresholds(thresholds);
            }
        }
        if (isValid) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void dimensionTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dimensionTextFieldFocusGained
        makeUpToDimensionRadioButton.setSelected(true);
    }//GEN-LAST:event_dimensionTextFieldFocusGained

    private void useIdentificatinLevelRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useIdentificatinLevelRadioButtonStateChanged
        if (useIdentificatinLevelRadioButton.isSelected()) {
            dimensionTextField.setText("");
        }
    }//GEN-LAST:event_useIdentificatinLevelRadioButtonStateChanged
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GenerateAutomaticTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GenerateAutomaticTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GenerateAutomaticTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GenerateAutomaticTables.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                GenerateAutomaticTables dialog = new GenerateAutomaticTables(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dimensionTextField;
    private javax.swing.JRadioButton makeUpToDimensionRadioButton;
    private javax.swing.ButtonGroup methodButtonGroup;
    private javax.swing.JPanel methodPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton useIdentificatinLevelRadioButton;
    // End of variables declaration//GEN-END:variables
}
