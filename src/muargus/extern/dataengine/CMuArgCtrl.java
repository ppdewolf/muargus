/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package muargus.extern.dataengine;

public class CMuArgCtrl {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CMuArgCtrl(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CMuArgCtrl obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        MuargusCtrlJNI.delete_CMuArgCtrl(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CMuArgCtrl() {
    this(MuargusCtrlJNI.new_CMuArgCtrl(), true);
  }

  public void SetProgressListener(IProgressListener ProgressListener) {
    MuargusCtrlJNI.CMuArgCtrl_SetProgressListener(swigCPtr, this, IProgressListener.getCPtr(ProgressListener), ProgressListener);
  }

  public boolean ComputeBIRRateThreshold(int TableIndex, double Risk, double[] ReIdentRate) {
    return MuargusCtrlJNI.CMuArgCtrl_ComputeBIRRateThreshold(swigCPtr, this, TableIndex, Risk, ReIdentRate);
  }

  public int NumberOfHouseholds() {
    return MuargusCtrlJNI.CMuArgCtrl_NumberOfHouseholds(swigCPtr, this);
  }

  public boolean CalculateBHRFreq(int TableIndex, boolean UseNumOfHH, int nUnsafeHH, int nUnsafeRec, double[] ResBHR, int[] ErrCode) {
    return MuargusCtrlJNI.CMuArgCtrl_CalculateBHRFreq(swigCPtr, this, TableIndex, UseNumOfHH, nUnsafeHH, nUnsafeRec, ResBHR, ErrCode);
  }

  public boolean CalculateBIRFreq(int TableIndex, int nUnsafe, double[] BIRResult, int[] ErrorCode) {
    return MuargusCtrlJNI.CMuArgCtrl_CalculateBIRFreq(swigCPtr, this, TableIndex, nUnsafe, BIRResult, ErrorCode);
  }

  public boolean SetBHRThreshold(int TableIndex, double BHRThreshold, int[] nUnsafeHH, int[] nUnsafeRec) {
    return MuargusCtrlJNI.CMuArgCtrl_SetBHRThreshold(swigCPtr, this, TableIndex, BHRThreshold, nUnsafeHH, nUnsafeRec);
  }

  public boolean GetBHRHistogramData(int TableIndex, int nClasses, double[] ClassLeftValue, int[] HHFrequency, int[] RecFrequency) {
    return MuargusCtrlJNI.CMuArgCtrl_GetBHRHistogramData(swigCPtr, this, TableIndex, nClasses, ClassLeftValue, HHFrequency, RecFrequency);
  }

  public boolean CalculateBaseHouseholdRisk(int[] ErrorCode) {
    return MuargusCtrlJNI.CMuArgCtrl_CalculateBaseHouseholdRisk(swigCPtr, this, ErrorCode);
  }

  public boolean MakeFileSafe(String FileName, boolean WithPrior, boolean WithEntropy, int HHIdentOption, boolean RandomizeOutput, boolean PrintBHR) {
    return MuargusCtrlJNI.CMuArgCtrl_MakeFileSafe(swigCPtr, this, FileName, WithPrior, WithEntropy, HHIdentOption, RandomizeOutput, PrintBHR);
  }

  public boolean GetBIRHistogramData(int TabIndex, int nClasses, double[] ClassLeftValue, double[] Ksi, int[] Frequency) {
    return MuargusCtrlJNI.CMuArgCtrl_GetBIRHistogramData(swigCPtr, this, TabIndex, nClasses, ClassLeftValue, Ksi, Frequency);
  }

  public boolean MakeFileSafeClearOptions() {
    return MuargusCtrlJNI.CMuArgCtrl_MakeFileSafeClearOptions(swigCPtr, this);
  }

  public boolean SetWeightNoise(int VarIndex, double WeightNoise, boolean Undo) {
    return MuargusCtrlJNI.CMuArgCtrl_SetWeightNoise(swigCPtr, this, VarIndex, WeightNoise, Undo);
  }

  public boolean SetSuppressPrior(int VarIndex, int Priority) {
    return MuargusCtrlJNI.CMuArgCtrl_SetSuppressPrior(swigCPtr, this, VarIndex, Priority);
  }

  public boolean SetRound(int VarIndex, double RoundBase, int nDec, boolean Undo) {
    return MuargusCtrlJNI.CMuArgCtrl_SetRound(swigCPtr, this, VarIndex, RoundBase, nDec, Undo);
  }

  public boolean SetChangeFile(int FileIndex, String FileName, int nVar, int[] VarIndex, String FileSeperator) {
    return MuargusCtrlJNI.CMuArgCtrl_SetChangeFile(swigCPtr, this, FileIndex, FileName, nVar, VarIndex, FileSeperator);
  }

  public boolean GetVarProperties(int VarIndex, int[] StartPos, int[] nPos, int[] nSuppress, double[] Entropy, int[] BandWidth, String[] Missing1, String[] Missing2, int[] NofCodes, int[] NofMissing) {
    return MuargusCtrlJNI.CMuArgCtrl_GetVarProperties(swigCPtr, this, VarIndex, StartPos, nPos, nSuppress, Entropy, BandWidth, Missing1, Missing2, NofCodes, NofMissing);
  }

  public boolean GetVarCode(int VarIndex, int CodeIndex, String[] Code, int[] PramPerc) {
    return MuargusCtrlJNI.CMuArgCtrl_GetVarCode(swigCPtr, this, VarIndex, CodeIndex, Code, PramPerc);
  }

  public boolean GetTableUC(int nDim, int Index, boolean[] BaseTable, int[] nUC, int[] VarList) {
    return MuargusCtrlJNI.CMuArgCtrl_GetTableUC(swigCPtr, this, nDim, Index, BaseTable, nUC, VarList);
  }

  public boolean SetPramValue(int CodeIndex, int Value) {
    return MuargusCtrlJNI.CMuArgCtrl_SetPramValue(swigCPtr, this, CodeIndex, Value);
  }

  public boolean SetPramVar(int VarIndex, int BandWidth, boolean Undo) {
    return MuargusCtrlJNI.CMuArgCtrl_SetPramVar(swigCPtr, this, VarIndex, BandWidth, Undo);
  }

  public boolean ClosePramVar(int VarIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_ClosePramVar(swigCPtr, this, VarIndex);
  }

  public boolean GetMinMaxValue(int VarIndex, double[] Min, double[] Max) {
    return MuargusCtrlJNI.CMuArgCtrl_GetMinMaxValue(swigCPtr, this, VarIndex, Min, Max);
  }

  public boolean SetCodingBottom(int VarIndex, double BottomLevel, String BottomString, boolean BottomUndo) {
    return MuargusCtrlJNI.CMuArgCtrl_SetCodingBottom(swigCPtr, this, VarIndex, BottomLevel, BottomString, BottomUndo);
  }

  public boolean SetCodingTop(int VarIndex, double TopLevel, String TopString, boolean TopUndo) {
    return MuargusCtrlJNI.CMuArgCtrl_SetCodingTop(swigCPtr, this, VarIndex, TopLevel, TopString, TopUndo);
  }

  public boolean SetBirThreshold(int TabIndex, double Threshold, int[] nUnsafe) {
    return MuargusCtrlJNI.CMuArgCtrl_SetBirThreshold(swigCPtr, this, TabIndex, Threshold, nUnsafe);
  }

  public boolean SetNumberOfChangeFiles(int nFiles) {
    return MuargusCtrlJNI.CMuArgCtrl_SetNumberOfChangeFiles(swigCPtr, this, nFiles);
  }

  public boolean CleanAll() {
    return MuargusCtrlJNI.CMuArgCtrl_CleanAll(swigCPtr, this);
  }

  public boolean SetOutFileInfo(boolean IsFixedFormat, String Seperator, String FirstLine, boolean StringsInQuotes) {
    return MuargusCtrlJNI.CMuArgCtrl_SetOutFileInfo(swigCPtr, this, IsFixedFormat, Seperator, FirstLine, StringsInQuotes);
  }

  public int NumberofRecords() {
    return MuargusCtrlJNI.CMuArgCtrl_NumberofRecords(swigCPtr, this);
  }

  public boolean SetInFileInfo(boolean IsFixedFormat, String Seperator, boolean IgnoreFirstLine) {
    return MuargusCtrlJNI.CMuArgCtrl_SetInFileInfo(swigCPtr, this, IsFixedFormat, Seperator, IgnoreFirstLine);
  }

  public boolean WriteVariablesInFile(String FileNameMicro, String FileNameOut, int nVar, int[] VarIndexes, String seperator, int[] ErrorCode) {
    return MuargusCtrlJNI.CMuArgCtrl_WriteVariablesInFile(swigCPtr, this, FileNameMicro, FileNameOut, nVar, VarIndexes, seperator, ErrorCode);
  }

  public boolean ApplyRecode() {
    return MuargusCtrlJNI.CMuArgCtrl_ApplyRecode(swigCPtr, this);
  }

  public boolean DoTruncate(int VarIndex, int nPos) {
    return MuargusCtrlJNI.CMuArgCtrl_DoTruncate(swigCPtr, this, VarIndex, nPos);
  }

  public boolean UndoRecode(int VarIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_UndoRecode(swigCPtr, this, VarIndex);
  }

  public boolean DoRecode(int VarIndex, String RecodeString, String eMissing1, String eMissing2, int[] ErrorType, int[] ErrorLine, int[] ErrorPos, String[] WarningString) {
    return MuargusCtrlJNI.CMuArgCtrl_DoRecode(swigCPtr, this, VarIndex, RecodeString, eMissing1, eMissing2, ErrorType, ErrorLine, ErrorPos, WarningString);
  }

  public boolean UnsafeVariableClose(int VarIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_UnsafeVariableClose(swigCPtr, this, VarIndex);
  }

  public boolean UnsafeVariableCodes(int VarIndex, int CodeIndex, int[] IsMissing, int[] Freq, String[] Code, int[] Count, int[] UCArray) {
    return MuargusCtrlJNI.CMuArgCtrl_UnsafeVariableCodes(swigCPtr, this, VarIndex, CodeIndex, IsMissing, Freq, Code, Count, UCArray);
  }

  public boolean UnsafeVariablePrepare(int VarIndex, int[] nCode) {
    return MuargusCtrlJNI.CMuArgCtrl_UnsafeVariablePrepare(swigCPtr, this, VarIndex, nCode);
  }

  public boolean UnsafeVariable(int VarIndex, int[] Count, int[] UCArray) {
    return MuargusCtrlJNI.CMuArgCtrl_UnsafeVariable(swigCPtr, this, VarIndex, Count, UCArray);
  }

  public int GetMaxnUC() {
    return MuargusCtrlJNI.CMuArgCtrl_GetMaxnUC(swigCPtr, this);
  }

  public boolean ComputeTables(int[] ErrorCode, int[] TableIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_ComputeTables(swigCPtr, this, ErrorCode, TableIndex);
  }

  public boolean BaseIndividualRisk(int fk, double Fk, double[] risk) {
    return MuargusCtrlJNI.CMuArgCtrl_BaseIndividualRisk(swigCPtr, this, fk, Fk, risk);
  }

  public boolean SetTable(int TabIndex, int Threshold, int nDim, int[] VarList, boolean IsBIR, int BIRWeightVarIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_SetTable(swigCPtr, this, TabIndex, Threshold, nDim, VarList, IsBIR, BIRWeightVarIndex);
  }

  public boolean SetNumberTab(int nTab) {
    return MuargusCtrlJNI.CMuArgCtrl_SetNumberTab(swigCPtr, this, nTab);
  }

  public boolean ExploreFile(String FileName, int[] ErrorCode, int[] LineNumber, int[] VarIndex) {
    return MuargusCtrlJNI.CMuArgCtrl_ExploreFile(swigCPtr, this, FileName, ErrorCode, LineNumber, VarIndex);
  }

  public boolean SetVariable(int Index, int bPos, int nPos, int nDec, String Missing1, String Missing2, boolean IsHHIdent, boolean IsHHVar, boolean IsCategorical, boolean IsNumeric, boolean IsWeight, int RelatedVar) {
    return MuargusCtrlJNI.CMuArgCtrl_SetVariable(swigCPtr, this, Index, bPos, nPos, nDec, Missing1, Missing2, IsHHIdent, IsHHVar, IsCategorical, IsNumeric, IsWeight, RelatedVar);
  }

  public boolean SetNumberVar(int nvar) {
    return MuargusCtrlJNI.CMuArgCtrl_SetNumberVar(swigCPtr, this, nvar);
  }

}
